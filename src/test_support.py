#! /usr/bin/env python
#
# Support module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    May 03, 2017 04:57:57 PM


import sys
import ssTestStation
import ssTestFixture
import ssutil

from ssTestStation import checkBarcodeData

from array import array

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1


station = ssTestStation.TestStation()   
#fixture = ssTestFixture.ProductionFixture()
#test = ssTestFixture.Test()
test_status="idle"
   

def set_Tk_var():
    global che58
    che58 = StringVar()
    global che59
    che59 = StringVar()
    global TestProgress
    TestProgress = IntVar()
    global barCodeEntry
    barCodeEntry = StringVar()

#initialization - called from GUI
def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top 
    ssutil.setTxtBox("w.TextResults")    
    w.MessageOP.configure(text = station.initialize())
    w.MessageTS.configure(text = station.stationID)
    #fixture.initialize()
    w.MessageTF.configure(text = station.function)

# clear out everything in preparation for testing
def clearTestData():
    w.MessageWO.configure(text ="")
    w.MessagePN.configure(text = "")    
    pass

# assign UUT data to GUI fields        
def setUutDataFields(UUT):
    w.Message9.configure(text = UUT.HWID)  #not sure about this one
    w.MessageWO.configure(text = UUT.workOrder )
    w.MessagePN.configure(text =  UUT.partNumber )     

    
def configDataBase():
    pass

def configSerialPort():
    pass

def extraMenuItem():
    pass


#####################
# This is called when a <return> #
# is entered in the Entry Box       #
#===================#
def getBarcodeEntry(object):
    clearTestData()   
    UUT = ssTestStation.checkBarcodeData(barCodeEntry.get())
    setUutDataFields(UUT)    
    # test.setParameters(UUT) # set up test parameters
    testResult = station.performTest(UUT)
    station.print_test_parameters(testResult)
    #processError(testResult)
    #submitResults(testResult)    
    pass

def button4OnClick(p1):
    print('testform_support.onClick')
    sys.stdout.flush()
    sys.exit()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    import testform 
#    import ssTestClass
   
    testform.vp_start_gui()
 


